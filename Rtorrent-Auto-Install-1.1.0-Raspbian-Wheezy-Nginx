#!/bin/bash
# PLEASE DO NOT SET ANY OF THE VARIABLES, THEY WILL BE POPULATED IN THE MENU
clear

# Formatting variables
BOLD=$(tput bold)
NORMAL=$(tput sgr0)
GREEN=$(tput setaf 2)
LBLUE=$(tput setaf 6)
RED=$(tput setaf 1)
PURPLE=$(tput setaf 5)

# NOTICE: Change rtorrent, libtorrent, rutorrent versions when update are available
RTORRENT_VERSION="0.9.6"
LIBTORRENT_VERSION="0.13.6"
RUTORRENT_VERSION="3.6"

# Used for choose what version of xmlrpc is installed
XMLRPC_VERSION=""

# Used for select best CFLAGS under compiling stage
# CFLAGS for the rpi B and B+
# Need to tested before use it on production systems
# CFLAGS="-march=armv6 -mtune=arm1176jzf-s -mfloat-abi=hard -mfpu=vfp -ffast-math -pipe -O3"
# maybe this is more specific for the hardware, but only work on gcc 4.9+
# CFLAGS="-march=armv6zk -mcpu=arm1176jzf-s -mfloat-abi=hard -mfpu=vfp -ffast-math -pipe -O3"

# CFLAGS for the rpi 2
# cause have a different SoC and need to be tested a lot
# before make it 'stable' and 'secure' this flags
# On the official raspberry forum say that can be used -O4 optimization, anyway -O3 is just enough for now
# Because NEON floating point don't follow (for now) entirely the IEEE standard
# need to be added with '-mfpu=neon-vpfv4' this flags '-funsafe-math-optimizations'
# More info at https://gcc.gnu.org/onlinedocs/gcc/ARM-Options.html - search for NEON instruction
# CFLAGS="-mcpu=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard -funsafe-math-optimizations -O3"

# Another flags for RPI2 can be this
# CFLAGS="-march=armv7-a -mfpu=vfpv4 -mfloat-abi=hard -funsafe-math-optimizations -O3"
# is less specific cause use '-march=armv7-a' instead of '-mtune=cortex-a7' and not use
# NEON floating point but just the basic version '-mfpu=vpfuv4', anyway for now is recommend to use
# '-funsafe-math-optimizations' with the '-mfpu=vpfuv4' or '-mfpu=neon-vpfv4'
COMPILE_FLAGS=""

# RPI version showed on the installation menu
RPI_VERSION=""

# The system user rtorrent is going to run as
RTORRENT_USER=""

# The user that is going to log into rutorrent (htaccess)
WEB_USER=""

# Array with webusers including their hashed paswords
WEB_USER_ARRAY=()

# Used for switch temp dirs to new one
NEW_DIR=""

# Temporary install folder for compiling
TEMP_INSTALL_DIR="/tmp"

# Temporary download folder for plugins
TEMP_PLUGIN_DIR="/tmp/rutorrentPlugins"

# Variable to understand what is needed for make a plugin work
PLUGIN_NEEDS=""

# Array of downloaded plugins
PLUGIN_ARRAY=()

# rTorrent users home dir
RTORRENT_HOME_DIR=""

# Function to check if running user is root
function CHECK_ROOT {
	if [[ "$(id -u)" != "0" ]]; then
		echo "Error! You must be a root user to run this script,\n please use any root user to continue." 1>&2
		exit 1
	fi
}

# Check rpi version for use the right compile flags and for show your version on main menu
# All the revision number is taken from the page for raspberry on elinux.org wiki and from raspberrypi-spy blog
# http://elinux.org/RPi_HardwareHistory#Board_Revision_History
# http://www.raspberrypi-spy.co.uk/2012/09/checking-your-raspberry-pi-board-version/
function CHECK_RPI_VERSION {
	# This is for detect more board, like Banana Pi and similar
	HW_FAMILY_SOC="$(grep Hardware /proc/cpuinfo | cut -d " " -f 2)"
	# This is for found the revision for mini boards
	HW_SOC_REVISION="$(grep Revision /proc/cpuinfo | cut -d " " -f 2)"
	
	if [[ $HW_FAMILY_SOC == "BCM2708" ]]; then
		if [[ $HW_SOC_REVISION == "0002" || $HW_SOC_REVISION == "0003" ]]; then
			RASPBERRY_VERSION="B rev. 1.0 - 256MB RAM"
			COMPILE_FLAGS=1
		elif [[ $HW_SOC_REVISION == "0004" || $HW_SOC_REVISION == "0005" || $HW_SOC_REVISION == "0006" ]]; then
			RASPBERRY_VERSION="B rev. 2.0 - 256MB RAM"
			COMPILE_FLAGS=1
		elif [[ $HW_SOC_REVISION == "0007" || $HW_SOC_REVISION == "0008" || $HW_SOC_REVISION == "0009" ]]; then
			RASPBERRY_VERSION="A rev. 2.0 - 256MB RAM"
			COMPILE_FLAGS=1
		elif [[ $HW_SOC_REVISION == "000d" || $HW_SOC_REVISION == "000e" || $HW_SOC_REVISION == "000f" ]]; then
			RASPBERRY_VERSION="B rev. 2.0 - 512MB RAM"
			COMPILE_FLAGS=1
		elif [[ $HW_SOC_REVISION == "0010" ]]; then
			RASPBERRY_VERSION="B+ rev. 1.0 - 512MB RAM"
			COMPILE_FLAGS=1
		elif [[ $HW_SOC_REVISION == "0012" ]]; then
			RASPBERRY_VERSION="A+ rev. 1.0 - 256MB RAM"
			COMPILE_FLAGS=1
		fi
	elif [[ $HW_FAMILY_SOC == "BCM2709" ]]; then
		if [[ $HW_SOC_REVISION == "a01041" || $HW_SOC_REVISION == "a21041" ]]; then
			RASPBERRY_VERSION="2 B - 1GB RAM"
			COMPILE_FLAGS=2
		fi
	else
		RASPBERRY_VERSION="Unknown"
		COMPILE_FLAGS=0
	fi
}

# License
function LICENSE {
	clear
	echo "${BOLD}--------------------------------------------------------------------------------"
	echo " THE BEER-WARE LICENSE (Revision 42):"
	echo " <patrick@kerwood.dk> wrote this script. As long as you retain this notice you"
	echo " can do whatever you want with this stuff. If we meet some day, and you think"
	echo " this stuff is worth it, you can buy me a beer in return."
	echo
	echo " - ${LBLUE}Patrick Kerwood @ LinuxBloggen.dk${NORMAL}"
	echo "${BOLD}--------------------------------------------------------------------------------${NORMAL}"
	echo
	read -p " Press any key to continue..." -n 1
}

# Check if apache2 is installed and remove or disable it
function CHECK_APACHE_INST {
	count=0

	while [ $count -eq 0 ]; do
		APACHE_CHECK="$(dpkg-query -W -f='${Status}' apache2 2>/dev/null | grep -c "ok installed")"

		if [ $APACHE2_CHECK -eq 1 ]; then
			echo -e " Apache2 is installed on this system, for avoid errors is required to unistall it\n or just remove the service from start at boot."
			echo
			read -p " Do you want to remove the service from start at boot? [Y/n] " -n 1
			if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
				service apache2 stop >> /dev/null
				update-rc.d -f apache2 remove >> /dev/null
				clear

				echo " Apache2 service is removed from init.d"
				echo " ${BOLD}This step is completely optional and not required for continue${NORMAL}"
				echo
				read -p " Do you want to complete uninstall apache2 and related packages? [Y/n] " -n 1
				if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
					count=1
					clear
					apt-get -y purge apache2
					apt-get -y autoremove
				elif [[ $REPLY =~ [Nn]$ ]]; then
					count=1
				else
					error="${RED} Can't understand your choise!${NORMAL}"
				fi
			elif [[ $REPLY =~ [Nn]$ ]]; then
				count=1
			else
				error="${RED} Can't understand your choise!${NORMAL}"
			fi
		else
			count=1
		fi
	done
}

# Checks for apache2-utils and unzip if it's installed. It's needed to make the WebUI user/s
function WEB_USER_UTILS {
	count=0

	while [ $count -eq 0 ]; do
		AP_UT_CHECK="$(dpkg-query -W -f='${Status}' apache2-utils 2>/dev/null | grep -c "ok installed")"
		UNZIP_CHECK="$(dpkg-query -W -f='${Status}' unzip 2>/dev/null | grep -c "ok installed")"
		HEADER

		if [[ $AP_UT_CHECK -ne 1 && $UNZIP_CHECK -ne 1 ]]; then
			echo " Both packages \"apache2-utils\" and \"unzip\" is not installed and is needed for continue."
			echo -e $error
			unset error
			read -p " Do you want to continue? [Y/n] " -n 1
			if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
				clear
				apt-get -y install apache2-utils unzip
				count=1
			elif [[ $REPLY =~ [Nn]$ ]]; then
				exit
			else
				error="${RED} Can't understand your choise!${NORMAL}"
			fi
		elif [[ $AP_UT_CHECK -ne 1 ]]; then
			echo " Package \"apache2-utils\" is not installed and is needed for continue."
			echo -e $error
			unset error
			read -p " Do you want to continue? [Y/n] " -n 1
			if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
				clear
				apt-get -y install apache2-utils
				count=1
			elif [[ $REPLY =~ [Nn]$ ]]; then
				exit
			else
				error="${RED} Can't understand your choise!${NORMAL}"
			fi
		elif [[ $UNZIP_CHECK -ne 1 ]]; then
			echo " Package \"unzip\" is not installed and is needed for continue."
			echo -e $error
			unset error
			read -p " Do you want to continue? [Y/n] " -n 1
			if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
				clear
				apt-get -y install unzip
				count=1
			elif [[ $REPLY =~ [Nn]$ ]]; then
				exit
			else
				error="${RED} Can't understand your choise!${NORMAL}"
			fi
		else
			count=1
		fi
	done
}

# Function to check or change your plugins folders
function CHECK_PLUGINS_FOLDER {
	echo " Please enter the path to your rutorrent plugins folder."
	echo -n " Leave blank for default [/var/www/rutorrent/plugins]: "
	read DIR

	if [[ -z $DIR ]]; then
		PLUGINS_DIR="/var/www/rutorrent/plugins"
	else
		count=0
		while [ $count -eq 0 ]; do
			if [[ ! -d $DIR ]]; then
				echo
				echo -e "${RED} Error! This folder not exits.${NORMAL}"
				echo
				echo " It's possible to create it."
				read -p " Do you want to create $DIR folder ?" -n 1
				if [[ $REPLY =~ [Yy]$ ]]; then
					count=1
					mkdir -vp $DIR
					PLUGINS_DIR="$DIR"
				elif [[ $REPLY =~ [Nn]$ ]]; then
					count=1
					CHECK_PLUGINS_FOLDER
				else
					count=0
					error="${RED} Can't understand your choice !${NORMAL}"
				fi
			fi
		done
	fi
}

# Function to set the system user, rtorrent is going to run as
function SET_RTORRENT_USER {
	count=0

	while [ $count -eq 0 ]; do
		SUDO_CHECK="$(dpkg-query -W -f='${Status}' sudo 2>/dev/null | grep -c "ok installed")"

		HEADER
		echo -e $error
		unset error
		echo -n " Please type a valid system user: "
		read RTORRENT_USER

		if [[ -z $(cat /etc/passwd | grep "^$RTORRENT_USER:") ]]; then
			HEADER
			echo " ${BOLD}The user \"$RTORRENT_USER\" does not exist!${NORMAL}"
			echo
			echo " [1] - Create the \"$RTORRENT_USER\" user"
			echo " [2] - Create a new user"
			echo
			echo " [0] - Back"
			echo
			echo -e $error
			unset error
			echo -n " What you want to do? "
			read -e user

			case $user in
				1)
					# This method is for create a new system user previously seletected
					# add them to the default group or to sudo group and create a new home directory for it
					USERNAME="$RTORRENT_USER"

					HEADER
					echo "${BOLD} A password is required and a blank password is not allowed.${NORMAL}"
					echo
					echo " Username chosen: ${BOLD}$USERNAME${NORMAL}"
					read -s -p " Enter password: " PWD

					egrep "^$USERNAME" /etc/passwd >/dev/null

					if [[ ! -n $PWD ]]; then
						echo && echo
						echo "${BOLD} An empty password is not allowed!${NORMAL}"
						echo
						read -p " Press any key to continue..." -n 1
					else
						# This perl command is for create encrypted password, is a needed passage
						# for create a new user. An empy password is not possibile
						ENCRYPTED_PASSWORD=$(perl -e 'print crypt($ARGV[0], "password")' $PWD)

						# Check for 'home' dir, this is for custom installation of the os
						if [[ ! -d "/home/" ]]; then
							mkdir -p /home/
						fi

						if [[ $SUDO_CHECK -ne 1 ]]; then
							useradd -m -p $ENCRYPTED_PASSWORD $USERNAME
						else
							echo && echo
							echo "The package \"sudo\" seem to be installed."
							read -p " You want to add the new user to 'sudo' group? [Y/n] " -n 1
							if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
								# Add a user to 'sudo' group, if the package is installed
								useradd -m -G sudo -p $ENCRYPTED_PASSWORD $USERNAME
							fi
						fi

						if [[ $? -eq 0 ]]; then
							RTORRENT_USER="$USERNAME"
							RTORRENT_HOME_DIR=$(cat /etc/passwd | grep "$RTORRENT_USER": | cut -d: -f6)
							count=1

							echo && echo
							echo " ${GREEN}User has been added to system!${NORMAL}"
							echo
							read -p " Press any key to continue..." -n 1
						else
							echo && echo
							echo " ${RED}Failed to add a user!${NORMAL}"
							echo
							read -p " Press any key to continue..." -n 1
						fi
					fi
					;;
				2)
					# This method is for create a new system user, add them to the default group
					# or to sudo group and create a new home directory for it
					HEADER
					echo "${BOLD} A password is required and a blank password is not allowed.${NORMAL}"
					echo
					read -p " Enter username: " USERNAME
					read -s -p " Enter password: " PWD

					egrep "^$USERNAME" /etc/passwd >/dev/null

					if [[ $? -eq 0 ]]; then
						echo && echo
						echo "${BOLD} The user \"$USERNAME\" exists!${NORMAL}"
						echo
						read -p " Press any key to continue..." -n 1
					elif [[ ! -n $PWD ]]; then
						echo && echo
						echo "${BOLD} An empty password is not allowed!${NORMAL}"
						echo
						read -p " Press any key to continue..." -n 1
					else
						# This perl command is for create encrypted password, is a needed passage
						# for create a new user. An empy password is not possibile
						ENCRYPTED_PASSWORD=$(perl -e 'print crypt($ARGV[0], "password")' $PASSWORD)

						# Check for /home/ dir, this is for custom installation for the os
						if [[ ! -d "/home/" ]]; then
							mkdir -p /home/
						fi

						if [[ $SUDO_CHECK -ne 1 ]]; then
							useradd -m -p $ENCRYPTED_PASSWORD $USERNAME
						else
							echo && echo
							read -p " You want to add the new user to 'sudo' group? [Y/n] " -n 1
							if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
								# Add a user to 'sudo' group, if the package is installed
								useradd -m -G sudo -p $ENCRYPTED_PASSWORD $USERNAME
							fi
						fi

						if [ $? -eq 0 ]; then
							RTORRENT_USER="$USERNAME"
							RTORRENT_HOME_DIR=$(cat /etc/passwd | grep "$RTORRENT_USER": | cut -d: -f6)
							count=1

							echo && echo
							echo " ${GREEN}User has been added to system!${NORMAL}"
							echo
							read -p " Press any key to continue..." -n 1
						else
							echo && echo
							echo " ${RED}Failed to add a user!${NORMAL}"
							echo
							read -p " Press any key to continue..." -n 1
						fi
					fi
					;;
				0)
					SET_RTORRENT_USER
					;;
				*)
					echo
					error="${RED} Not a usable number!${NORMAL}"
					;;
			esac
		elif [[ $(cat /etc/passwd | grep "^$RTORRENT_USER:" | cut -d: -f3) -lt 999 ]]; then
			echo
			error="${BOLD} The UID for \"$RTORRENT_USER\" is too low!${NORMAL}"
		elif [[ $RTORRENT_USER == nobody ]]; then
			echo
			error="${BOLD} You cant use \"$RTORRENT_USER\" as user!${NORMAL}"
		else
			RTORRENT_HOME_DIR=$(cat /etc/passwd | grep "$RTORRENT_USER": | cut -d: -f6)
			count=1
		fi
	done
}

# Function to create users for the webinterface
function SET_WEB_USER {
	while true; do
		HEADER
		echo "Please type the username for the web interface, a system user is not required."
		echo "${BOLD}A blank password is possible, but not recommended.${NORMAL}"
		echo -e $error
		unset error
		echo -n "Username for web interface: "
		read WEB_USER

		USER=$(htpasswd -n $WEB_USER 2>/dev/null)
		if [[ $? = 0 ]]; then
			WEB_USER_ARRAY+=($USER)
			break
		else
			echo
			error="${RED}You have entered an unusable username and/or different password.${NORMAL}"
		fi
	done
}

# Function to list webinterface users in the menu
function LIST_WEB_USERS {
	for i in ${WEB_USER_ARRAY[@]}; do
		USER_CUT=$(echo $i | cut -d \: -f 1)
		echo -n " $USER_CUT"
	done
}

# Function to list downloaded plugins in the menu
function LIST_PLUGINS {
	if [ ${#PLUGIN_ARRAY[@]} -eq 0 ]; then
		echo "   No plugins downloaded!"
	else
		for i in "${PLUGIN_ARRAY[@]}"; do
			echo -e "   - $i"
		done
	fi
}

# Function to change temp installation directory
function CHANGE_TEMP_INSTALL_DIR {
	count=0

	while [ $count -eq 0 ]; do
		HEADER
		echo " If the directory don't exist, a possibility to create it's given."
		read -p "Do you want to change the temporany installation directory? [Y/n] " -n 1

		if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
			echo -n "Please type a valid system user: "
			read NEW_DIR

			if [[ -d $NEW_DIR ]]; then
				# Change the old dir with the new one
				TEMP_INSTALL_DIR="$NEW_DIR"
				count=1
			else
				echo "${RED}Something went wrong!"
				echo " The directory chosen \"$NEW_DIR\" don't exist.${NORMAL}"
				echo
				read -p "Do you want to create \"$NEW_DIR\"? [Y/n] " -n 1
				if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
					# Create the new directory
					mkdir -vp $NEW_DIR

					# Change the old dir with the new one
					TEMP_INSTALL_DIR="$NEW_DIR"
					count=1
				else
					count=0
				fi
				count=0
			fi
		elif [[ $REPLY =~ [Nn]$ ]]; then
			count=1
		else
			echo "${RED}Something went wrong...Error!${NORMAL}"
			read -p " Press any key to continue..." -n 1
		fi
	done
}

# Function to change temp plugins directory
function CHANGE_TEMP_PLUGINS_DIR {
	count=0

	while [ $count -eq 0 ]; do
		HEADER
		echo " All the previous downloaded plugins, is moved into the new directory."
		echo " If the directory don't exist, a possibility to create it's given."
		read -p "Do you want to change the temporany plugins directory? [Y/n] " -n 1

		if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
			echo -n "Please type a valid system user: "
			read NEW_DIR

			if [[ -d $NEW_DIR ]]; then
				# Move all the directories/files into new temp dir
				mv $TEMP_PLUGIN_DIR* $NEW_DIR

				# Change the old dir with the new one
				TEMP_PLUGIN_DIR="$NEW_DIR"
				count=1
			else
				echo "${RED}Something went wrong!"
				echo " The directory chosen \"$NEW_DIR\" don't exist.${NORMAL}"
				echo
				read -p "Do you want to create \"$NEW_DIR\"? [Y/n] " -n 1

				if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
					# Create the new directory
					mkdir -vp $NEW_DIR

					# Move all the directories/files into new temp dir
					mv $TEMP_PLUGIN_DIR* $NEW_DIR

					# Change the old dir with the new one
					TEMP_PLUGIN_DIR="$NEW_DIR"
					count=1
				else
					count=0
				fi
			fi
		elif [[ $REPLY =~ [Nn]$ ]]; then
			count=1
		else
			echo "${RED}Something went wrong...Error!${NORMAL}"
			read -p " Press any key to continue..." -n 1
		fi
	done
}

# RaspberryPi Ascii Art taken from piksel on github, https://gist.github.com/piksel/3023588
# Header for the menu
function HEADER {
	clear
	echo "${GREEN}
      .~~.   .~~.
     '. \ ' ' / .'${RED}                       _                          _
      .~ .~~~..~.        ___ ___ ___ ___| |_ ___ ___ ___ _ _    ___|_|
     : .~.'~'.~. :      |  _| .'|_ -| . | . | -_|  _|  _| | |  | . | |
    ~ (   ) (   ) ~     |_| |__,|___|  _|___|___|_| |_| |_  |  |  _|_|
   ( : '~'.~.'~' : )                |_|                 |___|  |_|
    ~ .~ (   ) ~. ~
     (  : '~' :  )      ${NORMAL}${BOLD}Web Server + rTorrent + ruTorrent Auto Install${NORMAL}${RED}
      '~ .~~~. ~'            ${NORMAL}${LBLUE} Patrick Kerwood @ LinuxBloggen.dk${NORMAL}${RED}
          '~'${NORMAL}"
	echo "${BOLD}--------------------------------------------------------------------------------${NORMAL}"
}

# Function for the plugins download part
function DOWNLOAD_PLUGIN {
	clear
	echo "${GREEN}-------------------------------------| Info |-----------------------------------${NORMAL}"
	echo
	echo " Plugin: ${LBLUE}$name${NORMAL}"
	echo
	echo -e " $desc"
	echo
	echo " Info at $homepage"
	echo
	read -p " You want to download it [Y/n]: " -n 1

	if [[ $REPLY =~ [Yy]$ || -z $REPLY ]]; then
		if [[ $PLUGIN_NEEDS -eq "geoip" ]]; then
			curl -O http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
			mkdir -v /usr/share/GeoIP
			gunzip GeoLiteCity.dat.gz
			mv -v GeoLiteCity.dat /usr/share/GeoIP/GeoIPCity.dat
			rm GeoLiteCity.dat.gz
			apt-get -y install php5-geoip
		elif [[ $PLUGIN_NEEDS -eq "unrar" ]]; then
			apt-get -y install unrar-free
		elif [[ $PLUGIN_NEEDS -eq "mediainfo" ]]; then
			curl -O http://dl.bintray.com/novik65/generic/plugins/_task-3.6.tar.gz
			tar -zxvf _task-3.6.tar.gz -C $TEMP_PLUGIN_DIR
			rm _task-3.6.tar.gz
			apt-get -y install libzen0 libmediainfo0 mediainfo
		elif [[ $PLUGIN_NEEDS -eq "ffmpeg" ]]; then
			curl -O http://dl.bintray.com/novik65/generic/plugins/_task-3.6.tar.gz
			tar -zxvf _task-3.6.tar.gz -C $TEMP_PLUGIN_DIR
			rm _task-3.6.tar.gz
			apt-get -y install ffmpeg
		elif [[ $PLUGIN_NEEDS -eq "all" ]]; then
			curl -O http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
			mkdir -v /usr/share/GeoIP
			gunzip GeoLiteCity.dat.gz
			mv -v GeoLiteCity.dat /usr/share/GeoIP/GeoIPCity.dat
			rm GeoLiteCity.dat.gz
			mv /tmp/plugins/* $TEMP_PLUGIN_DIR
			apt-get -y install php5-geoip ffmpeg curl libzen0 libmediainfo0 mediainfo unrar-free
		else
		 if [[ ! -z $PLUGIN_NEEDS ]]; then
		 	PLUGIN_NEEDS=""
		 fi
		fi

		echo
		curl -O "$url"
		$unpack

		if [[ $? -eq "0" ]]; then
			rm "$file"
			echo
			PLUGIN_ARRAY+=("${name}")
			error=" Plugin downloaded, unpacked and moved to temp folder${NORMAL}"
			count=0
			return 0
		else
			echo
			error="${RED} Something went wrong...Error!${NORMAL}"
			return 1
		fi
	else
		count=0
	fi
	echo
}

function SELECT_PLUGINS {
	if [[ ! -d $TEMP_PLUGIN_DIR ]]; then mkdir $TEMP_PLUGIN_DIR; fi
	count=0

	while true;	do
		while [ $count -eq 0 ]; do
			clear
			count=1
			echo "${GREEN}-----------------------------------| ${BOLD}Page 1${NORMAL}${GREEN} |-----------------------------------${NORMAL}"
			echo " [1] - Erase Data ${GREEN}[recommended]${NORMAL}"
			echo " [2] - Create v3.6"
			echo " [3] - Traffic v3.6"
			echo " [4] - RSS v3.6"
			echo " [5] - Edit v3.6"
			echo " [6] - Retrackers v3.6"
			echo " [7] - Throttle v3.6"
			echo " [8] - Cookies v3.6"
			echo " [9] - Scheduler v3.6"
			echo " [10] - Auto Tools v3.6"
			echo " [11] - Data Dir v3.6 ${GREEN}[recommended]${NORMAL}"
			echo " [12] - Track Lables v3.6 ${GREEN}[recommended]${NORMAL}"
			echo " [13] - Geo IP v3.6"
			echo " [14] - Ratio v3.6 ${GREEN}[recommended]${NORMAL}"
			echo " [15] - Show Peers like wTorrent v3.6"
		done
		echo
		echo " [p1-3] - Change plugin page"
		echo " [q] - Exit plugin installation"
		echo "${GREEN}--------------------------------------------------------------------------------${NORMAL}"
		echo -e $error
		unset error
		echo
		echo -n "Choose plugin to see info: "

		read -e plugin

		case $plugin in
			p1)
				count=0
				;;
			p2)
				clear
				count=1
				echo "${GREEN}-----------------------------------| ${BOLD}Page 2${NORMAL}${GREEN} |-----------------------------------${NORMAL}"
				echo " [16] - Seeding Time v3.6 ${GREEN}[recommended]${NORMAL}"
				echo " [17] - HTTPRPC v3.6"
				echo " [18] - Diskspace v3.6"
				echo " [19] - Unpack v3.6"
				echo " [20] - Get Dir v3.6"
				echo " [21] - Source v3.6"
				echo " [22] - Chunks v3.6"
				echo " [23] - Data v3.6"
				echo " [24] - CPU Load v3.6"
				echo " [25] - Extsearch v3.6"
				echo " [26] - Theme v3.6"
				echo " [27] - Login Mgr v3.6"
				echo " [28] - ruTorrent Label Management Suite v1.1 ${GREEN}[recommended]${NORMAL}"
				echo " [29] - NFO ${GREEN}[recommended]${NORMAL}"
				echo " [30] - Chat v2.0"
				echo " [31] - Logoff v1.3"
				;;
			p3)
				clear
				count=1
				echo "${GREEN}-----------------------------------| ${BOLD}Page 3${NORMAL}${GREEN} |-----------------------------------${NORMAL}"
				echo " [32] - Pause v1.2"
				echo " [33] - Instant Search v1.0"
				echo " [34] - File Drop v3.6 (FF > 3.6 & Chrome only)"
				echo " [35] - Check Port v3.6"
				echo " [36] - History v3.6"
				echo " [37] - iPad v3.6"
				echo " [38] - Extended Ratio v3.6"
				echo " [39] - Feeds v3.6"
				echo " [40] - Media Information v3.6"
				echo " [41] - RSS URL Rewrite v3.6"
				echo " [42] - Screenshot v3.6"
				echo " [43] - RPC v3.6"
				echo " [44] - Rutracker Check v3.6"
				echo " [45] - Noty v3.6"
				echo " [46] - Task v3.6"
				echo " [47] - All Plugins v3.6. More info at http://git.io/vtDfb"
				;;
			1)
				name="Erase Data Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/erasedata-3.6.tar.gz"
				file="erasedata-3.6.tar.gz"
				desc="This plugin adds a context menu item to the right click menu which allows you\n to delete data."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginErasedata"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			2)
				name="Create Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/create-3.6.tar.gz"
				file="create-3.6.tar.gz"
				desc="This plugin allows for the creation of new .torrent files from a file or\n directory of files."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginCreate"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			3)
				name="Trafic Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/trafic-3.6.tar.gz"
				file="trafic-3.6.tar.gz"
				desc="The Trafic plugin is a subsystem for monitoring rtorrent traffic totals.\n It tracks both system wide and per-tracker totals.\n The plugin can display totals in three formats: hourly, daily, and mouthly.\n Statistics can be cleaned out at any time by clicking the 'Clear' button."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginTrafic"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			4)
				name="RSS Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/rss-3.6.tar.gz"
				file="rss-3.6.tar.gz"
				desc="This plugin is designed to fetch torrents via RSS download links.\n It has 2 main parts, one for entering feeds and one for setting up filters.\n For more information about rss, see http://en.wikipedia.org/wiki/RSS."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginRSS"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			5)
				name="Edit Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/edit-3.6.tar.gz"
				file="edit-3.6.tar.gz"
				desc="This plugin allows you to edit the list of trackers, and change the comment\n of the current torrent.\n After installation, a new context menu item will become available when you\n right click a torrent from the list: 'Edit Torrent...'"
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginEdit"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			6)
				name="Retrackers Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/retrackers-3.6.tar.gz"
				file="retrackers-3.6.tar.gz"
				desc="This plugin appends specified trackers to the trackers list of all newly\n added torrents.\n By the way, torrents may be added by any way - not just via ruTorrent."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginRetrackers"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			7)
				name="Throttle Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/throttle-3.6.tar.gz"
				file="throttle-3.6.tar.gz"
				desc="Throttle plugin gives a convenient control over the possibility to set limits\n of speed for groups of torrents.\n After this plugin is installed a new option 'Channels' will appear in\n the Settings dialog.\n Speed limits for some channels can be set here. (by default - 10)\n Assignment of channel number for a particular torrent or for a group of\n torrents can be made in it's contextual menu.\n Note - The '0' value conventionally for rTorrent, means 'no limits'.\n So the lowest possible limit is 1 Kbps."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginThrottle"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			8)
				name="Cookies Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/cookies-3.6.tar.gz"
				file="cookies-3.6.tar.gz"
				desc="Some trackers use cookies for the client authentication.\n It is transparent to user who uses a browser to work with such servers,\n cause browser store these cookies and returns them to the server automatically.\n The user just needs to enter login/password from time to time."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginCookies"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			9)
				name="Scheduler v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/scheduler-3.6.tar.gz"
				file="scheduler-3.6.tar.gz"
				desc="You can enable a scheduler to define a max of six rTorrent behavior types\n at each particular hour of 168 week hours."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginScheduler"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			10)
				name="Auto Tools Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/autotools-3.6.tar.gz"
				file="autotools-3.6.tar.gz"
				desc="The plugin provides some possibilities on automation.\n Following functions are realized for now:\n Auto Label, automatic creation of labels at addition of new torrent through\n the web interface.\n Auto Move: automatic transferring of torrent data files to other directory\n on downloading completion.\n Auto Watch: automatic adding torrents via nested set of\n watch directories."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginAutotools"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			11)
				name="Data Dir Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/datadir-3.6.tar.gz"
				file="datadir-3.6.tar.gz"
				desc="The plugin is intended for replacement of the current torrent data directory\n on another.\n Such operation is required, for example if the torrent data directory\n has been moved manually.\n It is also possible to move downloaded torrent's data.\n After plugin installation there will be a new item 'Save to...' in the context\n menu of the downloading area which shows a dialogue 'Torrent data directory'.\n In this dialogue you can specify a new path to the torrent data."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginDataDir"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			12)
				name="Track Lables Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/tracklabels-3.6.tar.gz"
				file="tracklabels-3.6.tar.gz"
				desc="The plug-in adds a set of labels on the category panel.\n These labels are created automatically on the basis of torrent's trackers."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginTracklabels"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			13)
				name="Geo IP Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/geoip-3.6.tar.gz"
				file="geoip-3.6.tar.gz"
				desc="Packages 'GeoLiteCity' and 'php5-geoip' is needed. \n For details about installation and configuration of GeoIP PHP extension,\n please visit: http://us3.php.net/manual/en/book.geoip.php"
				homepage="https://github.com/Novik/rutorrent/wiki/PluginGeoIP"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				PLUGIN_NEEDS="geoip"
				DOWNLOAD_PLUGIN
				;;
			14)
				name="Ratio Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/ratio-3.6.tar.gz"
				file="ratio-3.6.tar.gz"
				desc="This plugin allows to manage ratio limits for groups of torrents, conveniently.\n When the plugin is installed a new section 'Ratio groups' appears\n in the Settings dialog.\n Here user can define limits of ratio for some groups. (by default - 8)\n Assignation of group to one or several torrents is performed by selecting\n an appropriate option in the context menu of torrents."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginRatio"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			15)
				name="Show Peers like wTorrent Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/show_peers_like_wtorrent-3.6.tar.gz"
				file="show_peers_like_wtorrent-3.6.tar.gz"
				desc="The plugin changes the format of values in columns 'Seeds' and 'Peers'\n in the torrents list."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginShow_peers_like_wtorrent"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			16)
				name="Seeding Time Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/seedingtime-3.6.tar.gz"
				file="seedingtime-3.6.tar.gz"
				desc="The plugin adds the columns 'Finished' and 'Added' to the torrents list.\n This columns contains the time when download of the torrent was completed and\n accordingly, the time when torrent was added."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginSeedingtime"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			17)
				name="HTTPRPC Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/httprpc-3.6.tar.gz"
				file="httprpc-3.6.tar.gz"
				desc="This plugin is designed as a easy to use replacement for the mod_scgi\n (or similar) webserver module, with emphasis on extremely low bandwidth use.\n If you install this plugin, you do not need to use mod_scgi or the RPC Plugin.\n Note: This plugin requires a faster server, and is not recommended for embedded\n systems, like a router or slow computer."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginHTTPRPC"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			18)
				name="Diskspace Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/diskspace-3.6.tar.gz"
				file="diskspace-3.6.tar.gz"
				desc="This plugin adds an easy to read disk meter to the bottom menu bar."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginDiskspace"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			19)
				name="Unpack Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/unpack-3.6.tar.gz"
				file="unpack-3.6.tar.gz"
				desc="Packages 'unrar-free' is needed.\n This plugin is designed to manually or automatically unrar/unzip torrent data."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginUnpack"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				PLUGIN_NEEDS="unrar"
				DOWNLOAD_PLUGIN
			;;
			20)
				name="Get Dir Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/_getdir-3.6.tar.gz"
				file="_getdir-3.6.tar.gz"
				desc="The service plugin _getdir gives to other plugins the possibility of\n comfortable navigation on a host file system.\n Shows only directories to which rtorrent can write and which php can show."
				homepage="https://github.com/Novik/rutorrent/wiki/Plugin_getdir"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			21)
				name="Source Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/source-3.6.tar.gz"
				file="source-3.6.tar.gz"
				desc="This plugin adds a 'Get .torrent' item to the right click context menu.\n Allowing you to download the original .torrent file from the server,\n to your local machine."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginSource"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			22)
				name="Chunks Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/chunks-3.6.tar.gz"
				file="chunks-3.6.tar.gz"
				desc="This plugin adds a new tab to the tab bar called 'chunks'.\n The added tab allows you to monitor the download status of each individual\n torrent 'piece'"
				homepage="https://github.com/Novik/rutorrent/wiki/PluginChunks"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			23)
				name="Data Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/data-3.6.tar.gz"
				file="data-3.6.tar.gz"
				desc="This plugin adds the 'Get Data' item to the right click menu.\n This allows you to download the file in question via http to your\n local machine.\n On 32 bit systems, you can not download files larger than 2 GB, this is due\n to a php limitation"
				homepage="https://github.com/Novik/rutorrent/wiki/PluginData"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			24)
				name="CPU Load Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/cpuload-3.6.tar.gz"
				file="cpuload-3.6.tar.gz"
				desc="This plugin adds a CPU Load usage bar to the bottom toolbar."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginCpuload"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			25)
				name="Extsearch Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/extsearch-3.6.tar.gz"
				file="extsearch-3.6.tar.gz"
				desc="This plugin adds the ability to search many popular torrent sites for content\n without leaving the rutorrent url."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginExtsearch"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			26)
				name="Theme Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/theme-3.6.tar.gz"
				file="theme-3.6.tar.gz"
				desc="This plugin allows you to change the gui theme to one of several provided\n themes, or any your create, provided they are placed in the proper\n directory within the plugin."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginTheme"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			27)
				name="Login Mgr v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/loginmgr-3.6.tar.gz"
				file="loginmgr-3.6.tar.gz"
				desc="This plugin is used to login to 3rd party torrent sites.\n It's designed to be used in cased where cookies fail.\n It is a support plugin used for RSS and ExtSearch.\n Note: This plugin saves passwords in plain text."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginLoginMgr"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			28)
				name="Loot At v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/lookat-3.6.tar.gz"
				file="lookat-3.6.tar.gz"
				desc="This plugin is intended for looking torrent's name in the external sources."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginLookAt"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			29)
				name="NFO Plugin"
				url="http://srious.biz/nfo.tar.gz"
				file="nfo.tar.gz"
				desc="This plugin shows the contents of the .nfo file for a given torrent."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginNFO"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			30)
				name="Chat Plugin v2.0"
				url="http://rutorrent-chat.googlecode.com/files/chat-2.0.tar.gz"
				file="chat-2.0.tar.gz"
				desc="This plugin adds a chatbox to multi-user rutorrent installs.\n Note: Currently this is a single server chat program only\n (if you have multiple servers, this will NOT allow\n your users to chat across them)."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginChat"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			31)
				name="Logoff Plugin v1.3"
				url="http://rutorrent-logoff.googlecode.com/files/logoff-1.3.tar.gz"
				file="logoff-1.3.tar.gz"
				desc="This plugin allows you to switch users or logoff on systems which\n use authentication."
				homepage="https://github.com/Novik/rutorrent-logoff/"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			32)
				name="Pause Plugin v1.2"
				url="http://rutorrent-pausewebui.googlecode.com/files/pausewebui.1.2.zip"
				file="pausewebui.1.2.zip"
				desc="Plugin to pause the refresh timer, and add a button to manually refresh\n the page."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginPause"
				unpack="unzip $file -d $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			33)
				name="Instant Search Plugin v1.0"
				url="http://rutorrent-instantsearch.googlecode.com/files/instantsearch.1.0.zip"
				file="instantsearch.1.0.zip"
				desc="This plugin lets you search for local torrents running in rutorrent,\n updating results as you type them."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginInstantSearch"
				unpack="unzip $file -d $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			34)
				name="File Drop v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/filedrop-3.6.tar.gz"
				file="filedrop-3.6.tar.gz"
				desc="This plugin allows users to drag multiple torrents from desktop to the\n browser (FF > 3.6 & Chrome only)."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginFileDrop"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			35)
				name="Check Port v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/check_port-3.6.tar.gz"
				file="check_port-3.6.tar.gz"
				desc="This plugin adds an incoming port status indicator to the bottom bar."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginCheckPort"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			36)
				name="History v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/history-3.6.tar.gz"
				file="history-3.6.tar.gz"
				desc="This plugin is designed to log a history of torrents."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginHistory"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			37)
				name="iPad Plugin v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/ipad-3.6.tar.gz"
				file="ipad-3.6.tar.gz"
				desc="This plugin allows ruTorrent to work properly on iPad-like devices."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginIPad"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			38)
				name="Extended Ratio v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/extratio-3.6.tar.gz"
				file="extratio-3.6.tar.gz"
				desc="This plugin extends the functionality of the ratio plugin."
				homepage="https://github.com/Novik/ruTorrent/wiki/PluginExtRatio"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			39)
				name="Feeds v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/feeds-3.6.tar.gz"
				file="feeds-3.6.tar.gz"
				desc="This plugin is intended for making RSS feeds with information of torrents."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginFeeds"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			40)
				name="Media Information v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/mediainfo-3.6.tar.gz"
				file="mediainfo-3.6.tar.gz"
				desc="This plugin is intended to display media file information."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginMediainfo"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				PLUGIN_NEEDS="mediainfo"
				DOWNLOAD_PLUGIN
				;;
			41)
				name="RSS URL Rewrite v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/rssurlrewrite-3.6.tar.gz"
				file="rssurlrewrite-3.6.tar.gz"
				desc="This plugin extends the functionality of the RSS plugin."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginRSSURLRewrite"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			42)
				name="Screenshot v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/screenshots-3.6.tar.gz"
				file="screenshots-3.6.tar.gz"
				desc="Packages 'ffmpeg' is needed.\n This plugin is intended to show screenshots from video files."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginScreenshots"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				PLUGIN_NEEDS="ffmpeg"
				DOWNLOAD_PLUGIN
				;;
			43)
				name="RPC v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/rpc-3.6.tar.gz"
				file="rpc-3.6.tar.gz"
				desc="This plugin is a replacement for the mod_scgi webserver module."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginRPC"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			44)
				name="Rutracker Check v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/rutracker_check-3.6.tar.gz"
				file="rutracker_check-3.6.tar.gz"
				desc="This plugin checks the rutracker.org tracker for updated/deleted torrents."
				homepage="https://github.com/Novik/rutorrent/wiki/PluginRutracker_check"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			45)
				name="Noty v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/_noty-3.6.tar.gz"
				file="_noty-3.6.tar.gz"
				desc="This plugin provides the notification functionality for other plugins."
				homepage="https://github.com/Novik/rutorrent/wiki/Plugin_noty"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			46)
				name="Task v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins/_task-3.6.tar.gz"
				file="_task-3.6.tar.gz"
				desc="This plugin provides the possibility of running various scripts\n on the host system."
				homepage="https://github.com/Novik/rutorrent/wiki/Plugin_task"
				unpack="tar -zxvf $file -C $TEMP_PLUGIN_DIR"
				DOWNLOAD_PLUGIN
				;;
			47)
				name="All Plugins v3.6"
				url="http://dl.bintray.com/novik65/generic/plugins-3.6.tar.gz"
				file="plugins-3.6.tar.gz"
				desc="This installs about 40+ plugins except plugins numbers 29 to 33\n (NFO, Chat, Logoff, Pause and Instant Search).\n All dependencies will be installed. \n ${RED}REMEBER TO REMOVE HTTPRPC AND RPC PLUGINS FOR LOGIN TO WORK AT FIRST RUN!${NORMAL}"
				homepage="https://github.com/Novik/rutorrent/wiki/Plugins"
				unpack="tar -zxvf $file -C /tmp/"
				PLUGIN_NEEDS="all"
				DOWNLOAD_PLUGIN
				;;
			q|Q)
				break
				;;
			*)
				count=0
				echo
				error="${RED}Not a usable number!${NORMAL}"
				echo
				;;
		esac
	done
}

# Function for installing dependencies
function APT_DEPENDENCIES {
	# For now this is a minimal installation of needed pkg
	clear
	apt-get update
	# Need to see if some package can be added or removed
	apt-get -y install openssl git tmux curl build-essential automake libtool \
	libcppunit-dev libssl-dev libcurl4-openssl-dev libsigc++-2.0-dev libncurses5-dev
}

# Function to choose which version the user want
function CHOOSE_XMLRPC_VERSION {
	count=0

	while [ $count -eq 0 ]; do
		HEADER
		echo " ${BOLD}Super-stable contains very few bugs and have/use features up to 3+ years old."
		echo " Stable contains some bugs and have/use features up to 2 years old."
		echo " Advanced contains many bugs and have/use features up to 1/4 year old.${NORMAL}"
		echo " Choose what version you want to download and install."
		echo
		echo " [1] - Install super-stable version [recommended]"
		echo " [2] - Install stable version"
		echo " [3] - Install advanced version"
		echo
		echo " [0] - Show changelogs"
		echo " [q] - Quit"
		echo
		echo -e $error
		unset error
		echo -n "${GREEN}>>${NORMAL} "

		read -e version

		case "$version" in
			1)
				count=1;
				XMLRPC_VERSION=1;
				INSTALL_XMLRPC
				;;
			2)
				count=1;
				XMLRPC_VERSION=2;
				INSTALL_XMLRPC
				;;
			3)
				XMLRPC_VERSION=3;
				INSTALL_XMLRPC
				;;
			0)
				count=1;
				SHOW_XMLRPC_CHANGELOG
				;;
			q|Q)
				clear
				break
				;;
			*)
				error="${RED} Can't understand your choise!${NORMAL}"
				;;
		esac
	done
}

# Function to show changelog for super-stable, stable and advanced version of xmlrpc
function SHOW_XMLRPC_CHANGELOG {
	count=0

	while [ $count -eq 0 ]; do
		HEADER
		echo " Choose what changelog you want to view."
		echo
		echo " [1] - Changelog for super-stable version"
		echo " [2] - Changelog for stable version"
		echo " [3] - Changelog for advanced version"
		echo
		echo " [0] - Back"
		echo
		echo -e $error
		unset error
		echo -n "${GREEN}>>${NORMAL} "

		read -e changelog

		case "$changelog" in
			1)
				count=1;
				XMLRPC_VERSION=1;
				XMLRPC_CHANGELOG
				;;
			2)
				count=1;
				XMLRPC_VERSION=2;
				XMLRPC_CHANGELOG
				;;
			3)
				count=1;
				XMLRPC_VERSION=3;
				XMLRPC_CHANGELOG
				;;
			0)
				count=1;
				CHOOSE_XMLRPC_VERSION
				;;
			*)
				error="${RED} Can't understand your choise!${NORMAL}"
				;;
		esac
	done
}

# Function to show changelog for selected xmlrpc-c version
# The sed lines need some work, is not perfect at the moment
function XMLRPC_CHANGELOG {
	# Use temp folder
	cd $TEMP_INSTALL_DIR

	if [[ $XMLRPC_VERSION -eq 1 ]]; then
		# Download and show changelog for xmlrpc-c super-stable
		curl -L http://xmlrpc-c.sourceforge.net/change_super_stable.html -o xmlrpc-ss-changelog.txt
		sed -n -e '1,17d' -e 's/&lt;//; s/&gt;//' -e :a -e '/^$/!{s/<[^>]*>//g;p;}; s/^[ t]*//; s/[ t]*$//' xmlrpc-ss-changelog.txt > xmlrpc-changelog.txt
	elif [[ $XMLRPC_VERSION -eq 2 ]]; then
		# Download and show changelog for xmlrpc-c stable
		curl -L http://xmlrpc-c.sourceforge.net/change_stable.html -o xmlrpc-sb-changelog.txt
		sed -n -e '1,15d; 21,22d; 32,33d; 49,50d' -e 's/&lt;//; s/&gt;//' -e :a -e '/^$/!{s/<[^>]*>//g;p;}; s/^[ t]*//; s/[ t]*$//' xmlrpc-sb-changelog.txt > xmlrpc-changelog.txt
	elif [[ $XMLRPC_VERSION -eq 3 ]]; then
		# Download and show changelog for xmlrpc-c advanced
		curl -L http://xmlrpc-c.sourceforge.net/change_advanced.html -o xmlrpc-ad-changelog.txt
		sed -n -e '1,15d' -e 's/&lt;//; s/&gt;//' -e :a -e '/^$/!{s/<[^>]*>//g;p;}; s/^[ t]*//; s/[ t]*$//' xmlrpc-ad-changelog.txt > xmlrpc-changelog.txt
	fi

	# Show modified changelog
	less xmlrpc-changelog.txt

	# Delete downloaded changelog
	rm xmlrpc-*.txt

	# Return to changelog menu
	SHOW_XMLRPC_CHANGELOG
}

# Function for setting up and install xmlrpc-c
function INSTALL_XMLRPC {
	# Use the temp folder for compiling
	cd $TEMP_INSTALL_DIR

	if [[ $XMLRPC_VERSION -eq 1 ]]; then
		# Download and install xmlrpc-c super-stable from sourceforge
		curl -q -L http://sourceforge.net/projects/xmlrpc-c/files/latest/download -o xmlrpc-c.tgz
		tar zxvf xmlrpc-c.tgz
		mv xmlrpc-c-1.* xmlrpc
		cd xmlrpc
	elif [[ $XMLRPC_VERSION -eq 2 ]]; then
		# Package subversion is needed
		apt-get -y install subversion

		# Download and install xmlrpc-c stable from sourceforge SVN
		svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/stable xmlrpc
		cd xmlrpc
	elif [[ $XMLRPC_VERSION -eq 3 ]]; then
		# Package subversion is needed
		apt-get -y install subversion

		# Download and install xmlrpc-c advanced from sourforge SVN
		svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/advanced xmlrpc
		cd xmlrpc
	fi

	# Check if xmlrpc directory exist
	if [[ -d $TEMP_INSTALL_DIR/xmlrpc ]]; then
		if [[ $COMPILE_FLAGS -eq 1 ]]; then
			# if is a rpi a/a+/b/b+
			./configure --disable-cplusplus 'CFLAGS=-march=armv6 -mcpu=arm1176jzf-s -mfloat-abi=hard -mfpu=vfp -ffast-math -pipe -O3'
			make
		elif [[ $COMPILE_FLAGS -eq 2 ]]; then
			# if is a rpi2
			./configure --disable-cplusplus 'CFLAGS=-march=armv7-a -mcpu=cortex-a7 -mfloat-abi=hard -mfpu=neon-vfpv4 -funsafe-math-optimizations -O3'
			make -j2
		elif [[ $COMPILE_FLAGS -eq 0 ]]; then
			# if rpi version can not be retrived, is compiled with the default system flags
			./configure --disable-cplusplus
			make
		fi

		make install

	else
		echo
		echo "${RED}Something went wrong...Error!${NORMAL}"
		read -p " Press any key to continue..." -n 1
	fi
}

# Function for setting up and install libtorrent
function INSTALL_LIBTORRENT {
	# Use the temp folder for compiling
	cd $TEMP_INSTALL_DIR

	# Create and move into the folder
	mkdir rtorrent-$RTORRENT_VERSION
	cd rtorrent-$RTORRENT_VERSION

	# Download and install libtorrent
	curl -L https://github.com/rakshasa/libtorrent/archive/""$LIBTORRENT_VERSION"".tar.gz -o libtorrent-""$LIBTORRENT_VERSION"".tar.gz
	tar -zxvf libtorrent-$LIBTORRENT_VERSION.tar.gz
	cd libtorrent-$LIBTORRENT_VERSION
	./autogen.sh

	# Check if libtorrent directory exist
	if [[ -d $TEMP_INSTALL_DIR/rtorrent/libtorrent-$LIBTORRENT_VERSION ]]; then
		if [[ $COMPILE_FLAGS -eq 1 ]]; then
			# if is a rpi a/a+/b/b+
			./configure 'CFLAGS=-march=armv6 -mcpu=arm1176jzf-s -mfloat-abi=hard -mfpu=vfp -ffast-math -pipe -O3 --disable-instrumentation'
			make
		elif [[ $COMPILE_FLAGS -eq 2 ]]; then
			# if is a rpi2
			./configure 'CFLAGS=-march=armv7-a -mcpu=cortex-a7 -mfloat-abi=hard -mfpu=neon-vfpv4 -funsafe-math-optimizations -O3 --disable-instrumentation'
			make -j2
		elif [[ $COMPILE_FLAGS -eq 0 ]]; then
			# if rpi version can not be retrived, is compiled with the default system flags
			./configure
			make
		fi

		make install
		
	else
		echo
		echo "${RED}Something went wrong...Error!${NORMAL}"
		read -p " Press any key to continue..." -n 1
	fi

	# Move out from folder
	cd ..
}

# Function for setting up and install rtorrent
function INSTALL_RTORRENT {
	# Use the temp folder for compiling
	cd $TEMP_INSTALL_DIR

	# Download and install rtorrent
	curl -L https://github.com/rakshasa/rtorrent/archive/""$RTORRENT_VERSION"".tar.gz -o rtorrent-""$RTORRENT_VERSION"".tar.gz
	tar -zxvf rtorrent-$RTORRENT_VERSION.tar.gz
	cd rtorrent-$RTORRENT_VERSION
	./autogen.sh

	# Check if rtorrent directory exist
	if [[ -d $TEMP_INSTALL_DIR/rtorrent-$RTORRENT_VERSION ]]; then
		if [[ $COMPILE_FLAGS -eq 1 ]]; then
			# if is a rpi a/a+/b/b+
			./configure --with-xmlrpc-c 'CFLAGS=-march=armv6 -mcpu=arm1176jzf-s -mfloat-abi=hard -mfpu=vfp -ffast-math -pipe -O3'
			make
		elif [[ $COMPILE_FLAGS -eq 2 ]]; then
			# if is a rpi2
			./configure --with-xmlrpc-c 'CFLAGS=-march=armv7-a -mcpu=cortex-a7 -mfloat-abi=hard -mfpu=neon-vfpv4 -funsafe-math-optimizations -O3'
			make -j2
		elif [[ $COMPILE_FLAGS -eq 0 ]]; then
			# if rpi version can not be retrived, is compiled with the default system flags
			./configure --with-xmlrpc-c
			make
		fi

		make install

	else
		echo
		echo "${RED}Something went wrong...Error!${NORMAL}"
		read -p " Press any key to continue..." -n 1
	fi

	# Move out from folder and delete it
	cd ../..
	rm -rv rtorrent

	ldconfig

	# Creating session directory
	if [[ ! -d $RTORRENT_HOME_DIR/.rtorrent-session ]]; then
		mkdir "$RTORRENT_HOME_DIR"/.rtorrent-session
		chown "$RTORRENT_USER"."$RTORRENT_USER" "$RTORRENT_HOME_DIR"/.rtorrent-session
	else
		chown "$RTORRENT_USER"."$RTORRENT_USER" "$RTORRENT_HOME_DIR"/.rtorrent-session
	fi

	# Creating downloads folder
	if [[ ! -d $RTORRENT_HOME_DIR/Downloads ]]; then
		mkdir "$RTORRENT_HOME_DIR"/Downloads
		chown "$RTORRENT_USER"."$RTORRENT_USER" "$RTORRENT_HOME_DIR"/Downloads
	else
		chown "$RTORRENT_USER"."$RTORRENT_USER" "$RTORRENT_HOME_DIR"/Downloads
	fi

	# Downloading rtorrent.rc file.
	curl -L https://raw.github.com/Kerwood/rtorrent.auto.install/master/Files/rtorrent.rc -o "$RTORRENT_HOME_DIR"/.rtorrent.rc
	chown "$RTORRENT_USER"."$RTORRENT_USER" "$RTORRENT_HOME_DIR"/.rtorrent.rc
	sed -i "s@HOMEDIRHERE@$RTORRENT_HOME_DIR@g" "$RTORRENT_HOME_DIR"/.rtorrent.rc
}

# Function for installing rutorrent and plugins
function INSTALL_RUTORRENT {
	# Download and install rutorrent
	curl -L http://dl.bintray.com/novik65/generic/rutorrent-$RUTORRENT_VERSION.tar.gz -o rutorrent-"$RUTORRENT_VERSION".tar.gz
	tar -zxvf rutorrent-$RUTORRENT_VERSION.tar.gz

	if [[ -d /usr/share/nginx/html/rutorrent ]]; then rm -rf /usr/share/nginx/html/rutorrent; fi

	mv -f rutorrent /usr/share/nginx/html/
	rm -v rutorrent-$RUTORRENT_VERSION.tar.gz

	if [[ -d $TEMP_PLUGIN_DIR ]]; then mv -fv "$TEMP_PLUGIN_DIR"/* /usr/share/nginx/html/rutorrent/plugins; fi

	# Changing permissions for rutorrent and plugins
	chown -R www-data:www-data /usr/share/nginx/html/rutorrent
	chmod -R 775 /usr/share/nginx/html/rutorrent

	# Changeing SCGI mount point in rutorrent config
	sed -i "s/\/RPC2/\/rutorrent\/RPC2/g" ./rutorrent/conf/config.php
}

# Function for configuring nginx
function CONFIGURE_NGINX {
	# Install the required packages
	apt-get install -y nginx php5-fpm php5-cli

	# Stop nginx service and unlink/delete default config file
	service nginx stop >> /dev/null
	unlink /etc/nginx/sites-enabled/default

	# Create standard www folder and copy default index.html
	if [ ! -d /var/www ]; then mkdir -p /var/www; fi
	cp /usr/share/nginx/html/index.html /var/www/

	# Check and create new virtual host for rutorrent
	mv /etc/nginx/sites-available/default /etc/nginx/sites-available/default.original
	rm -f /etc/nginx/sites-enabled/default
	rm -f /etc/nginx/sites-available/rutorrent.conf

	if [ ! -f /etc/nginx/sites-available/rutorrent.conf ]; then
		cat >/etc/nginx/sites-available/rutorrent.conf <<- EOF
		server {
			root /var/www;
			index index.php index.html index.htm;

			location /rutorrent {
				access_log /var/log/nginx/rutorrent.access.log;
				error_log /var/log/nginx/rutorrent.error.log;
				auth_basic "Restricted";
				auth_basic_user_file /var/www/rutorrent/.htpasswd;
				location ~ .php$ {
					fastcgi_split_path_info ^(.+\.php)(.*)$;
					fastcgi_pass    backendrutorrent;
					fastcgi_index   index.php;
					fastcgi_param   SCRIPT_FILENAME $document_root/rutorrent$fastcgi_script_name;
					include fastcgi_params;
					fastcgi_intercept_errors        on;
					fastcgi_ignore_client_abort     off;
					fastcgi_connect_timeout         60;
					fastcgi_send_timeout            180;
					fastcgi_read_timeout            180;
					fastcgi_buffer_size             128k;
					fastcgi_buffers                 4       256k;
					fastcgi_busy_buffers_size       256k;
					fastcgi_temp_file_write_size    256k;
				}
			}

			location /RPC2 {
				access_log /var/log/nginx/rutorrent.rpc2.access.log;
				error_log /var/log/nginx/rutorrent.rpc2.error.log;
				include /etc/nginx/scgi_params;
				scgi_pass backendrtorrent;
			}
		}
		EOF

		mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.original
		cat >/etc/nginx/nginx.conf <<- 'EOF'
		user www-data;
		worker_processes 4;
		pid /var/run/nginx.pid;

		events {
			worker_connections 1024;
		}

		http {
			log_format main '$remote_addr - $remote_user [$time_local] "$request" '
				'$status $body_bytes_sent "$http_referer" '
				'"$http_user_agent" "$http_x_forwarded_for"';

			include /etc/nginx/mime.types;
			default_type application/octet-stream;

			access_log /var/log/nginx-access.log main;
			error_log /var/log/nginx-error.log warn;

			client_max_body_size 100M;
			sendfile on;
			#tcp_nopush on;
			keepalive_timeout 65;
			#gzip on;

			upstream backendrtorrent {
				server unix:$RTORRENT_HOME_DIR/rtorrent/.rtorrent.sock;
			}
			upstream backendrutorrent {
				server unix:/var/run/php-fpm-rutorrent.sock;
			}

			# Load virtual host conf files
			include /etc/nginx/sites-enabled/*;
		}
		EOF

		if [[ ! -d /etc/php5/fpm/pool.d ]]; then
			mkdir -vp /etc/php5/fpm/pool.d
			if [[ ! -f /etc/php5/fpm/pool.d/rutorrent.conf ]]; then
				cat >/etc/php5/fpm/pool.d/rutorrent.conf <<- 'EOF'
				[rutorrent]
				user = www-data
				group = www-data
				listen = /var/run/php-fpm-rutorrent.sock
				listen.owner = www-data
				listen.group = www-data
				listen.mode = 0660
				pm = static
				pm.max_children = 2
				pm.start_servers = 2
				pm.min_spare_servers = 1
				pm.max_spare_servers = 3
				chdir = /
				EOF
			fi
		fi

		# Modify php.ini for larger file uploads (torrents)
		sed -i -e '/upload_max_filesize =/ s/= .*/= 10M/' /etc/php5/fpm/php.ini
		sed -i -e '/post_max_size =/ s/= .*/= 125M/' /etc/php5/fpm/php.ini
		sed -i -e '/memory_limit =/ s/= .*/= 256M/' /etc/php5/fpm/php.ini # Possibly change this higher/lower.
		sed -i -e 's/;date.timezone.*/date.timezone = UTC/' /etc/php5/fpm/php.ini
		sed -i -e 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/' /etc/php5/fpm/php.ini

		# Add right user for php5-fpm
		sed -i "s/user = www-data/user = www-data/" /etc/php5/fpm/pool.d/www.conf
		sed -i "s/group = www-data/group = www-data/" /etc/php5/fpm/pool.d/www.conf
		sed -i "s/;listen\.owner.*/listen.owner = www-data/" /etc/php5/fpm/pool.d/www.conf
		sed -i "s/;listen\.group.*/listen.group = www-data/" /etc/php5/fpm/pool.d/www.conf
		sed -i "s/;listen\.mode.*/listen.mode = 0660/" /etc/php5/fpm/pool.d/www.conf # This passage in not required normally

		# Enable the nginx config file for rutorrent
		ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled

		# Enable the nginx config file for rutorrent
		ln -s /etc/nginx/sites-available/rutorrent /etc/nginx/sites-enabled
	fi

	# Restart nginx and php5-fpm
	service nginx start >> /dev/null
	service php5-fpm restart >> /dev/null

	# Creating .htaccess file
	printf "%s\n" "${WEB_USER_ARRAY[@]}" > /var/www/rutorrent/.htpasswd
}

function PREPARE_FOLDERS {
	if [[ ! -d /var/www ]]; then mkdir -p /var/www; fi

	if [[ ! -d $RTORRENT_HOME_DIR/downloads ]] || [[ ! -d $RTORRENT_HOME_DIR/watch ]] || [[ ! -d $RTORRENT_HOME_DIR/.session ]] || [[ ! -d $RTORRENT_HOME_DIR/.sockets ]]; then
		mkdir $RTORRENT_HOME_DIR/downloads
		mkdir $RTORRENT_HOME_DIR/watch
		mkdir $RTORRENT_HOME_DIR/.session
		mkdir $RTORRENT_HOME_DIR/.sockets
	fi

	touch $RTORRENT_HOME_DIR/.sockets/rpc-socket
	touch $RTORRENT_HOME_DIR/.rtorrent.rc

	# update permission
	chown -R "$RTORRENT_USER"."$RTORRENT_USER" $RTORRENT_HOME_DIR/
	chown -R www-data:www-data /var/www/
}

# Function for setting up the init script.
function SETUP_INIT {
	# Downloading and installing rtorrent init script.
	wget -O /etc/init.d/rtorrent-init https://raw.github.com/Kerwood/rtorrent.auto.install/master/Files/rtorrent-init
	chmod +x /etc/init.d/rtorrent-init
	sed -i "s/USERNAMEHERE/$RTORRENT_USER/g" /etc/init.d/rtorrent-init
	update-rc.d rtorrent-init defaults
	service rtorrent-init start
}

function INSTALL_COMPLETE {
	if [ -d $TEMP_PLUGIN_DIR ]; then rm -rf $TEMP_PLUGIN_DIR; fi
	HEADER

	echo "${GREEN}Installation is complete.${NORMAL}"
	echo
	echo "${PURPLE}Your downloads folder is in ${LBLUE}$RTORRENT_HOME_DIR/Downloads${NORMAL}"
	echo "${PURPLE}Sessions data is ${LBLUE}$RTORRENT_HOME_DIR/.rtorrent-session${NORMAL}"
	echo "${PURPLE}rtorrent's configuration file is ${LBLUE}$RTORRENT_HOME_DIR/.rtorrent.rc${NORMAL}"
	echo
	echo "${PURPLE}If you want to change settings for rtorrent, such as download folder, etc.,"
	echo "you need to edit the '.rtorrent.rc' file. E.g. 'nano $RTORRENT_HOME_DIR/.rtorrent.rc'${NORMAL}"
	echo

	LOCAL_IP=$(ip route get 8.8.8.8 | awk '{ print $NF; exit }')
	EXTERNAL_IP=$(curl -s http://icanhazip.com)

	if [[ ! -z $LOCAL_IP && ! -z $EXTERNAL_IP ]]; then
		echo "${LBLUE}LOCAL IP:${NORMAL} http://$LOCAL_IP/rutorrent"
		echo "${LBLUE}EXTERNAL IP:${NORMAL} http://$EXTERNAL_IP/rutorrent"
		echo "Visit rutorrent through the above address."
	elif [[ -z $LOCAL_IP ]]; then
		echo "Can't detect the local IP address"
		echo "Try visit rutorrent at http://127.0.0.1/rutorrent"
	elif [[ -z $EXTERNAL_IP ]]; then
		echo "${LBLUE}LOCAL:${NORMAL} http://$LOCAL_IP/rutorrent"
		echo "Visit rutorrent through your local network"
	else
		echo "Can't detect the IP address"
		echo "Try visit rutorrent at http://127.0.0.1/rutorrent"
	fi
	echo
}

CHECK_ROOT
CHECK_RPI_VERSION
LICENSE
CHECK_APACHE_INST
WEB_USER_UTILS
if [ -d $TEMP_PLUGIN_DIR ]; then rm -rf $TEMP_PLUGIN_DIR; fi
HEADER
SET_RTORRENT_USER
SET_WEB_USER

while true; do
	HEADER

	if [[ $RASPBERRY_VERSION == "Unknown" ]]; then
		echo " ${BOLD}Raspberry${NORMAL}${RED} Unknown Version${NORMAL}"
		echo " ${PURPLE}Open a news issue to report our hardware at https://github.com/Kerwood/rtorrent.auto.install"
		echo " by copying the result of the following command:\n ${BOLD}grep Revision /proc/cpuinfo | cut -d \" \" -f 2${NORMAL}"
	else
		echo " ${BOLD}Raspberry${NORMAL}${GREEN} $RPI_VERSION${NORMAL}"
	fi

		echo
	echo " rTorrent version:   ${BOLD}${RED}$RTORRENT_VERSION${NORMAL}"
	echo " libTorrent version: ${BOLD}${RED}$LIBTORRENT_VERSION${NORMAL}"
	echo " ruTorrent version:  ${BOLD}${RED}$RUTORRENT_VERSION${NORMAL}"
	echo
	echo " rTorrent user: ${BOLD}${GREEN} $RTORRENT_USER${NORMAL}"
	echo -n " ruTorrent user(s): ${BOLD}${GREEN}" && LIST_WEB_USERS
	echo
	echo " ${NORMAL}ruTorrent plugins: ${BOLD}${GREEN}" && LIST_PLUGINS
	echo
	echo " ${NORMAL}Temp Installation directory: ${BOLD}${GREEN}$TEMP_INSTALL_DIR${NORMAL}"
	echo " Temp Plugins directory: ${BOLD}${GREEN}$TEMP_PLUGIN_DIR${NORMAL}"
	echo
	echo " [1] - Change rTorrent user"
	echo " [2] - Add another ruTorrent user"
	echo " [3] - Download plugins"
	echo " [4] - Change Temp Install directory"
	echo " [5] - Change Temp Plugins directory"
	echo
	echo " [0] - Start installation"
	echo " [q] - Quit"
	echo -e $error
	unset error
	echo -n "${BOLD}${GREEN}>>${NORMAL} "

	read -e install

	case $install in
		1)
			SET_RTORRENT_USER
			;;
		2)
			SET_WEB_USER
			;;
		3)
			SELECT_PLUGINS
			;;
		4)
			CHANGE_TEMP_INSTALL_DIR
			;;
		5)
			CHANGE_TEMP_PLUGINS_DIR
			;;
		0)
			CHOOSE_WEB_SERVER
			APT_DEPENDENCIES
			PREPARE_FOLDERS
			CHOOSE_XMLRPC_VERSION
			INSTALL_LIBTORRENT
			INSTALL_RTORRENT
			INSTALL_RUTORRENT
			CONFIGURE_WEB_SERVER
			SETUP_INIT
			INSTALL_COMPLETE
			break
			;;
		q|Q)
			clear
			break
			;;
		*)
			error="${RED} Can't understand your choise!${NORMAL}"
			;;
	esac
done
